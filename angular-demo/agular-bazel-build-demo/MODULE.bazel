# javascript and node
bazel_dep(name = "aspect_rules_js", version = "2.1.0")


bazel_dep(name = "rules_nodejs", version = "6.3.0")
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "16.14.2")


npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)

use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")

# es_build

bazel_dep(name = "aspect_rules_esbuild", version = "0.21.0")

# Typescript
bazel_dep(name = "aspect_rules_ts", version = "3.5.0")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)

rules_ts_ext.deps(
    ts_version_from = "//:package.json",
)

use_repo(rules_ts_ext, "npm_typescript")


#proto??

bazel_dep(name = "protobuf", version = "30.0-rc1")


# bazel lib by aspect


bazel_dep(name = "aspect_bazel_lib", version = "2.9.4")


bazel_dep(name = "bazel_skylib", version = "1.7.1")
